// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240201093010_SecondCreate")]
    partial class SecondCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.Game", b =>
                {
                    b.Property<string>("GameId")
                        .HasColumnType("text");

                    b.Property<bool>("GameStarted")
                        .HasColumnType("boolean");

                    b.Property<string>("IconImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberOfQuestions")
                        .HasColumnType("integer");

                    b.Property<bool>("PublicGame")
                        .HasColumnType("boolean");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QuestionStr")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Models.Voter", b =>
                {
                    b.Property<int>("VoterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VoterId"));

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserDeviceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Vote")
                        .HasColumnType("boolean");

                    b.HasKey("VoterId");

                    b.HasIndex("GameId");

                    b.ToTable("Voters");
                });

            modelBuilder.Entity("Models.Question", b =>
                {
                    b.HasOne("Models.Game", "Game")
                        .WithMany("Questions")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Models.Voter", b =>
                {
                    b.HasOne("Models.Game", "Game")
                        .WithMany("Voters")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Models.Game", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("Voters");
                });
#pragma warning restore 612, 618
        }
    }
}
